
arrayString: указатель на массив символов, представляющий входную строку.
startPos: целое число, представляющее индекс символа, с которого должна начинаться нужная подстрока.
длина: целое число, представляющее желаемую длину подстроки.
Функция использует динамическое выделение памяти для создания нового массива символов длиной length + 1, потому что нам нужен один дополнительный пробел для нулевого символа-ограничителя '\0', который отмечает конец строки.

Затем функция использует цикл for для копирования символов длины из входной строки, начиная с позиции startPos, во вновь выделенный массив символов, один за другим.

Наконец, нулевой символ-ограничитель 0 добавляется в конец новой строки путем присвоения его последнему элементу массива. 
Затем функция возвращает указатель на этот новый массив символов.

В функции main() вызывается функция substring() со строкой "abcdefg", начальной позицией 2 и длиной 3, а возвращаемой подстроке присваивается значение newStr. 
Затем подстрока распечатывается с помощью std::cout, а память, выделенная для новой строки, освобождается с помощью delete[].

В целом, эта программа демонстрирует, как вы можете создать новую динамически выделяемую подстроку, используя простую арифметику указателей в C++.

--------------------------------------------------------------------------------------------------------
4.3:

source - это ссылка на объект std::string, который представляет входную строку, подлежащую изменению.
target - это объект std::string, который представляет подстроку, подлежащую замене.
ReplaceText - это другой объект std::string, который представляет строку замены.
Функция перебирает каждое вхождение целевой строки в исходной строке, используя метод find класса std::string. 
В условии цикла, while ((pos = source.find(target, pos)) != string::npo), цикл будет продолжаться до тех пор, пока позиция target в source не будет равна string::npo. 
Это означает, что цикл будет продолжаться до тех пор, пока цель не будет найдена во всех возможных позициях в источнике, и больше не останется вхождений для замены.
Для каждого вхождения он заменяет целевую подстроку на ReplaceText, используя метод replace класса std::string.
